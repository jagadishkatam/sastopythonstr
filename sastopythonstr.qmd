---
title: "SAS <-> Python :: String Manipulation Functions"
format:
  html:
    css: styles.css
    toc: true
    toc-location: left
    grid:
      sidebar-width: 100px
      body-width: 1200px
      margin-width: 400px
      gutter-width: 0.5rem
editor: visual
execute:
  enabled: false
---

```{r, eval=TRUE, echo=FALSE, include=FALSE}
library(tidyverse)
```




::::: grid
::: g-col-5
#              SAS

#### Concatenate Strings

```{sas}
data ds_new; 
set ds_old; 
USUBJID = catx("-", STUDYID, SITEID, SUBJID); 
run;
```
:::

::: g-col-7
#              Python

##### 

```{python}
ds_old['USUBJID'] = ds_old[['STUDYID', 'SITEID', 'SUBJID']].agg('-'.join, axis=1)
ds_new = ds_old 
```
:::
:::::

#### Keep the First Word

::::: grid
::: g-col-5
```{sas}
data ds_new; 
set ds_old; 
reason = scan(other, 1); 
run;
```
:::

::: g-col-7
```{python}
ds_old['reason'] = ds_old['other'].str.split(r'[\s]').str[0]
ds_new = ds_old 
```
:::
:::::

#### Extract Numbers

::::: grid
::: g-col-5
```{sas}
data ds_new; 
set ds_old; 
num = compress(other, , "kd"); 
run;
```
:::

::: g-col-7
```{python}
ds_old['SITEID'] = ds_old['SITEID'].str.extract(r'(\d+)')
ds_new = ds_old 
```
:::
:::::

#### Keep Positions

::::: grid
::: g-col-5
```{sas}
data ds_new; 
set ds_old; 
str = substr(USUBJID, 1, 4); 
run;
```
:::

::: g-col-7
```{python}
ds_old['USUBJID'] = ds_old['USUBJID'].str[0:4]
ds_new = ds_old 
```
:::
:::::

#### Keep String Containing Fixed Values

::::: grid
::: g-col-5
```{sas}
data ds_new; 
set ds_old; 
if find(ARMCD, "ARM-A"); 
run;
```
:::

::: g-col-7
```{python}
ds_new = ds_old[ds_old['ARMCD']=='ARM-A']
```
:::
:::::

#### Replace Sub-Strings in a String

::::: grid
::: g-col-5
```{sas}
data ds_new; 
set ds_old; 
a = tranwrd(b, 'SV', 'VS'); 
run;
```
:::

::: g-col-7
```{python}
ds_old['a'] = ds_old['b'].str.replace('SV','VS')
ds_new = ds_old
```
:::
:::::

#### Trim Leading and Trailing Spaces

::::: grid
::: g-col-5
```{sas}
data ds_new; 
set ds_old; 
CMTRT = strip(TRT); 
run;

```
:::

::: g-col-7
```{python}
ds_old['CMTRT'] = ds_old['CMTRT'].str.strip()
ds_new = ds_old
```
:::
:::::

#### Convert to Upper Case

::::: grid
::: g-col-5
```{sas}
data ds_new; 
set ds_old; 
AETERM = upcase(AEVERB); 
run;
```
:::

::: g-col-7
```{python}
ds_old['AETERM'] = ds_old['AEVERB'].str.upper()
ds_new = ds_old
```
:::
:::::

#### Convert to Lower Case

::::: grid
::: g-col-5
```{sas}
data ds_new; 
set ds_old; 
VSREASND = lowcase(RSND);
run;
```
:::

::: g-col-7
```{python}
ds_old['VSREASND'] = ds_old['RSND'].str.lower()
ds_new = ds_old
```
:::
:::::

#### Length of String

::::: grid
::: g-col-5
```{sas}
data ds_new; 
set ds_old; 
TERM_LEN = length(DSTERM); 
run;
```
:::

::: g-col-7
```{python}
ds_old['TERM_LEN'] = ds_old['DSTERM'].str.len()
ds_new = ds_old
```
:::
:::::
